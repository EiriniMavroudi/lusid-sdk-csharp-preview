/*
 * LUSID API
 *
 * # Introduction  This page documents the [LUSID APIs](https://www.lusid.com/api/swagger), which allows authorised clients to query and update their data within the LUSID platform.  SDKs to interact with the LUSID APIs are available in the following languages and frameworks:  * [C#](https://github.com/finbourne/lusid-sdk-csharp) * [Java](https://github.com/finbourne/lusid-sdk-java) * [JavaScript](https://github.com/finbourne/lusid-sdk-js) * [Python](https://github.com/finbourne/lusid-sdk-python) * [Angular](https://github.com/finbourne/lusid-sdk-angular)  The LUSID platform is made up of a number of sub-applications. You can find the API / swagger documentation by following the links in the table below.   | Application | Description | API / Swagger Documentation | | - -- -- | - -- -- | - -- - | | LUSID | Open, API-first, developer-friendly investment data platform. | [Swagger](https://www.lusid.com/api/swagger/index.html) | | Web app | User-facing front end for LUSID. | [Swagger](https://www.lusid.com/app/swagger/index.html) | | Scheduler | Automated job scheduler. | [Swagger](https://www.lusid.com/scheduler2/swagger/index.html) | | Insights |Monitoring and troubleshooting service. | [Swagger](https://www.lusid.com/insights/swagger/index.html) | | Identity | Identity management for LUSID (in conjuction with Access) | [Swagger](https://www.lusid.com/identity/swagger/index.html) | | Access | Access control for LUSID (in conjunction with Identity) | [Swagger](https://www.lusid.com/access/swagger/index.html) | | Drive | Secure file repository and manager for collaboration. | [Swagger](https://www.lusid.com/drive/swagger/index.html) | | Luminesce | Data virtualisation service (query data from multiple providers, including LUSID) | [Swagger](https://www.lusid.com/honeycomb/swagger/index.html) | | Notification | Notification service. | [Swagger](https://www.lusid.com/notifications/swagger/index.html) | | Configuration | File store for secrets and other sensitive information. | [Swagger](https://www.lusid.com/configuration/swagger/index.html) | 
 *
 * The version of the OpenAPI document: 0.11.3502
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Lusid.Sdk.Client.OpenAPIDateConverter;

namespace Lusid.Sdk.Model
{
    /// <summary>
    /// CustomEntityResponse
    /// </summary>
    [DataContract(Name = "CustomEntityResponse")]
    public partial class CustomEntityResponse : IEquatable<CustomEntityResponse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomEntityResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomEntityResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomEntityResponse" /> class.
        /// </summary>
        /// <param name="href">The specific Uniform Resource Identifier (URI) for this resource at the requested effective and asAt datetime..</param>
        /// <param name="entityType">The EntityType to be used when relations are created to the CustomEntity (required).</param>
        /// <param name="customEntityId">A unique identifier for the CustomEntity (required).</param>
        /// <param name="version">version (required).</param>
        /// <param name="displayName">The display name of the CustomEntity (required).</param>
        /// <param name="description">The description of the CustomEntity.</param>
        /// <param name="identifiers">A collection of CustomEntityIdentifiers that can identify the CustomEntity (required).</param>
        /// <param name="fields">A collection of CustomEntityFields that decorate the CustomEntity (required).</param>
        /// <param name="effectiveRange">effectiveRange (required).</param>
        /// <param name="asAtRange">asAtRange (required).</param>
        /// <param name="links">Collection of links..</param>
        public CustomEntityResponse(string href = default(string), string entityType = default(string), string customEntityId = default(string), Version version = default(Version), string displayName = default(string), string description = default(string), List<CustomEntityIdResponse> identifiers = default(List<CustomEntityIdResponse>), List<CustomEntityField> fields = default(List<CustomEntityField>), DateRange effectiveRange = default(DateRange), DateRange asAtRange = default(DateRange), List<Link> links = default(List<Link>))
        {
            // to ensure "entityType" is required (not null)
            this.EntityType = entityType ?? throw new ArgumentNullException("entityType is a required property for CustomEntityResponse and cannot be null");
            // to ensure "customEntityId" is required (not null)
            this.CustomEntityId = customEntityId ?? throw new ArgumentNullException("customEntityId is a required property for CustomEntityResponse and cannot be null");
            // to ensure "version" is required (not null)
            this.Version = version ?? throw new ArgumentNullException("version is a required property for CustomEntityResponse and cannot be null");
            // to ensure "displayName" is required (not null)
            this.DisplayName = displayName ?? throw new ArgumentNullException("displayName is a required property for CustomEntityResponse and cannot be null");
            // to ensure "identifiers" is required (not null)
            this.Identifiers = identifiers ?? throw new ArgumentNullException("identifiers is a required property for CustomEntityResponse and cannot be null");
            // to ensure "fields" is required (not null)
            this.Fields = fields ?? throw new ArgumentNullException("fields is a required property for CustomEntityResponse and cannot be null");
            // to ensure "effectiveRange" is required (not null)
            this.EffectiveRange = effectiveRange ?? throw new ArgumentNullException("effectiveRange is a required property for CustomEntityResponse and cannot be null");
            // to ensure "asAtRange" is required (not null)
            this.AsAtRange = asAtRange ?? throw new ArgumentNullException("asAtRange is a required property for CustomEntityResponse and cannot be null");
            this.Href = href;
            this.Description = description;
            this.Links = links;
        }

        /// <summary>
        /// The specific Uniform Resource Identifier (URI) for this resource at the requested effective and asAt datetime.
        /// </summary>
        /// <value>The specific Uniform Resource Identifier (URI) for this resource at the requested effective and asAt datetime.</value>
        [DataMember(Name = "href", EmitDefaultValue = true)]
        public string Href { get; set; }

        /// <summary>
        /// The EntityType to be used when relations are created to the CustomEntity
        /// </summary>
        /// <value>The EntityType to be used when relations are created to the CustomEntity</value>
        [DataMember(Name = "entityType", IsRequired = true, EmitDefaultValue = false)]
        public string EntityType { get; set; }

        /// <summary>
        /// A unique identifier for the CustomEntity
        /// </summary>
        /// <value>A unique identifier for the CustomEntity</value>
        [DataMember(Name = "customEntityId", IsRequired = true, EmitDefaultValue = false)]
        public string CustomEntityId { get; set; }

        /// <summary>
        /// Gets or Sets Version
        /// </summary>
        [DataMember(Name = "version", IsRequired = true, EmitDefaultValue = false)]
        public Version Version { get; set; }

        /// <summary>
        /// The display name of the CustomEntity
        /// </summary>
        /// <value>The display name of the CustomEntity</value>
        [DataMember(Name = "displayName", IsRequired = true, EmitDefaultValue = false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// The description of the CustomEntity
        /// </summary>
        /// <value>The description of the CustomEntity</value>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// A collection of CustomEntityIdentifiers that can identify the CustomEntity
        /// </summary>
        /// <value>A collection of CustomEntityIdentifiers that can identify the CustomEntity</value>
        [DataMember(Name = "identifiers", IsRequired = true, EmitDefaultValue = false)]
        public List<CustomEntityIdResponse> Identifiers { get; set; }

        /// <summary>
        /// A collection of CustomEntityFields that decorate the CustomEntity
        /// </summary>
        /// <value>A collection of CustomEntityFields that decorate the CustomEntity</value>
        [DataMember(Name = "fields", IsRequired = true, EmitDefaultValue = false)]
        public List<CustomEntityField> Fields { get; set; }

        /// <summary>
        /// Gets or Sets EffectiveRange
        /// </summary>
        [DataMember(Name = "effectiveRange", IsRequired = true, EmitDefaultValue = false)]
        public DateRange EffectiveRange { get; set; }

        /// <summary>
        /// Gets or Sets AsAtRange
        /// </summary>
        [DataMember(Name = "asAtRange", IsRequired = true, EmitDefaultValue = false)]
        public DateRange AsAtRange { get; set; }

        /// <summary>
        /// Collection of links.
        /// </summary>
        /// <value>Collection of links.</value>
        [DataMember(Name = "links", EmitDefaultValue = true)]
        public List<Link> Links { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CustomEntityResponse {\n");
            sb.Append("  Href: ").Append(Href).Append("\n");
            sb.Append("  EntityType: ").Append(EntityType).Append("\n");
            sb.Append("  CustomEntityId: ").Append(CustomEntityId).Append("\n");
            sb.Append("  Version: ").Append(Version).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Identifiers: ").Append(Identifiers).Append("\n");
            sb.Append("  Fields: ").Append(Fields).Append("\n");
            sb.Append("  EffectiveRange: ").Append(EffectiveRange).Append("\n");
            sb.Append("  AsAtRange: ").Append(AsAtRange).Append("\n");
            sb.Append("  Links: ").Append(Links).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomEntityResponse);
        }

        /// <summary>
        /// Returns true if CustomEntityResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomEntityResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomEntityResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Href == input.Href ||
                    (this.Href != null &&
                    this.Href.Equals(input.Href))
                ) && 
                (
                    this.EntityType == input.EntityType ||
                    (this.EntityType != null &&
                    this.EntityType.Equals(input.EntityType))
                ) && 
                (
                    this.CustomEntityId == input.CustomEntityId ||
                    (this.CustomEntityId != null &&
                    this.CustomEntityId.Equals(input.CustomEntityId))
                ) && 
                (
                    this.Version == input.Version ||
                    (this.Version != null &&
                    this.Version.Equals(input.Version))
                ) && 
                (
                    this.DisplayName == input.DisplayName ||
                    (this.DisplayName != null &&
                    this.DisplayName.Equals(input.DisplayName))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Identifiers == input.Identifiers ||
                    this.Identifiers != null &&
                    input.Identifiers != null &&
                    this.Identifiers.SequenceEqual(input.Identifiers)
                ) && 
                (
                    this.Fields == input.Fields ||
                    this.Fields != null &&
                    input.Fields != null &&
                    this.Fields.SequenceEqual(input.Fields)
                ) && 
                (
                    this.EffectiveRange == input.EffectiveRange ||
                    (this.EffectiveRange != null &&
                    this.EffectiveRange.Equals(input.EffectiveRange))
                ) && 
                (
                    this.AsAtRange == input.AsAtRange ||
                    (this.AsAtRange != null &&
                    this.AsAtRange.Equals(input.AsAtRange))
                ) && 
                (
                    this.Links == input.Links ||
                    this.Links != null &&
                    input.Links != null &&
                    this.Links.SequenceEqual(input.Links)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Href != null)
                    hashCode = hashCode * 59 + this.Href.GetHashCode();
                if (this.EntityType != null)
                    hashCode = hashCode * 59 + this.EntityType.GetHashCode();
                if (this.CustomEntityId != null)
                    hashCode = hashCode * 59 + this.CustomEntityId.GetHashCode();
                if (this.Version != null)
                    hashCode = hashCode * 59 + this.Version.GetHashCode();
                if (this.DisplayName != null)
                    hashCode = hashCode * 59 + this.DisplayName.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Identifiers != null)
                    hashCode = hashCode * 59 + this.Identifiers.GetHashCode();
                if (this.Fields != null)
                    hashCode = hashCode * 59 + this.Fields.GetHashCode();
                if (this.EffectiveRange != null)
                    hashCode = hashCode * 59 + this.EffectiveRange.GetHashCode();
                if (this.AsAtRange != null)
                    hashCode = hashCode * 59 + this.AsAtRange.GetHashCode();
                if (this.Links != null)
                    hashCode = hashCode * 59 + this.Links.GetHashCode();
                return hashCode;
            }
        }

    }
}
